% docker build -t javastart/password-app:latest .
[+] Building 27.1s (11/11) FINISHED
...
 => [1/6] FROM docker.io/library/eclipse-temurin:21-alpine...   0.0s
 => [2/6] COPY . /build                                         0.0s
 => [3/6] WORKDIR /build                                        0.0s
 => [4/6] RUN ./mvnw clean package                              24.4s
 => [5/6] RUN cp /build/target/*.jar /opt/app.jar               0.3s
 => [6/6] WORKDIR /opt                                          0.0s
...


% docker build -t javastart/password-app:latest .
[+] Building 0.5s (11/11) FINISHED
...                                                                             0.0s
 => [1/6] FROM docker.io/library/eclipse-temurin:21-alpine@sha256:...           0.0s
 => CACHED [2/6] COPY . /build                                                  0.0s
 => CACHED [3/6] WORKDIR /build                                                 0.0s
 => CACHED [4/6] RUN ./mvnw clean package                                       0.0s
 => CACHED [5/6] RUN cp /build/target/*.jar /opt/app.jar                        0.0s
 => CACHED [6/6] WORKDIR /opt                                                   0.0s


% docker build -t javastart/password-app:latest .
[+] Building 45.8s (14/14) FINISHED
...
 => [1/9] FROM docker.io/library/eclipse-temurin:21-alpine  0.0s
 => [2/9] COPY .mvn /build/.mvn                             0.0s
 => [3/9] COPY mvnw pom.xml /build/                         0.0s
 => [4/9] WORKDIR /build                                    0.0s
 => [5/9] RUN ./mvnw dependency:go-offline                  40.3s
 => [6/9] COPY src /build/src                               0.0s
 => [7/9] RUN ./mvnw clean package                          3.4s
 => [8/9] RUN cp /build/target/*.jar /opt/app.jar           0.3s
 => [9/9] WORKDIR /opt                                      0.0s
...


% docker build -t javastart/password-app:latest .
[+] Building 4.5s (14/14) FINISHED
...
 => [1/9] FROM docker.io/library/eclipse-temurin:21-alpine...   0.0s
 => CACHED [2/9] COPY .mvn /build/.mvn                          0.0s
 => CACHED [3/9] COPY mvnw pom.xml /build/                      0.0s
 => CACHED [4/9] WORKDIR /build                                 0.0s
 => CACHED [5/9] RUN ./mvnw dependency:go-offline               0.0s
 => [6/9] COPY src /build/src                                   0.0s
 => [7/9] RUN ./mvnw clean package                              3.2s
 => [8/9] RUN cp /build/target/*.jar /opt/app.jar               0.2s
 => [9/9] WORKDIR /opt                                          0.0s
 ...